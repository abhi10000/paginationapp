{"version":3,"sources":["FirstComponents.js","PaginationExample.js","App.js","reportWebVitals.js","index.js"],"names":["FirstComponents","props","handlePageClick","e","selectedPage","selected","offset","state","perPage","setState","currentPage","loadMoreData","tableData","orgtableData","bind","data","this","slice","pageCount","Math","ceil","length","getData","axios","get","then","res","border","map","tdata","i","id","name","email","body","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","PureComponent","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQA+GeA,EA3Gf,kDAEI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAYVC,gBAAkB,SAACC,GACf,IAAMC,EAAeD,EAAEE,SACjBC,EAASF,EAAe,EAAKG,MAAMC,QAEzC,EAAKC,SAAS,CACVC,YAAaN,EACbE,OAAQA,IACT,WACC,EAAKK,mBAlBT,EAAKJ,MAAQ,CACTD,OAAQ,EACRM,UAAW,GACXC,aAAc,GACdL,QAAS,GACTE,YAAa,GAEjB,EAAKR,gBAAkB,EAAKA,gBAAgBY,KAArB,gBAVR,EAFvB,gDA4BI,WACF,IAAMC,EAAOC,KAAKT,MAAMM,aAElBI,EAAQF,EAAKE,MAAMD,KAAKT,MAAMD,OAAQU,KAAKT,MAAMD,OAASU,KAAKT,MAAMC,SAC3EQ,KAAKP,SAAS,CACbS,UAAWC,KAAKC,KAAKL,EAAKM,OAASL,KAAKT,MAAMC,SAC9CI,UAAUK,MAlCb,+BAuCI,WACID,KAAKM,YAxCb,qBA2CI,WAAW,IAAD,OACNC,IACKC,IADL,iDAEKC,MAAK,SAAAC,GAEF,IAAIX,EAAOW,EAAIX,KAEXE,EAAQF,EAAKE,MAAM,EAAKV,MAAMD,OAAQ,EAAKC,MAAMD,OAAS,EAAKC,MAAMC,SAGzE,EAAKC,SAAS,CACVS,UAAWC,KAAKC,KAAKL,EAAKM,OAAS,EAAKd,MAAMC,SAC9CK,aAAca,EAAIX,KAClBH,UAAUK,SAxD9B,oBA6DI,WACI,OACI,gCACM,4CAEA,wBAAOU,OAAO,IAAd,UACG,kCACA,oCACI,sCACA,uCACA,yCAEJ,gCAEKX,KAAKT,MAAMK,UAAUgB,KAAI,SAACC,EAAOC,GAAR,OACnB,+BACI,6BAAKD,EAAME,KACX,6BAAKF,EAAMG,OACX,6BAAKH,EAAMI,QACX,6BAAKJ,EAAMK,kBAS9B,cAAC,IAAD,CACGC,cAAe,OACfC,UAAW,OACXC,WAAY,MACZC,eAAgB,WAChBpB,UAAWF,KAAKT,MAAMW,UACtBqB,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAczB,KAAKd,gBACnBwC,mBAAoB,aACpBC,sBAAuB,mBACvBC,gBAAiB,kBApGrC,GAAqCC,iBCCEA,gBCOxBC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACI,cAAC,EAAD,OCKOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b2037385.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport axios from 'axios';\r\nimport ReactPaginate from 'react-paginate';\r\n    \r\nexport class FirstComponents extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            offset: 0,\r\n            tableData: [],\r\n            orgtableData: [],\r\n            perPage: 11,\r\n            currentPage: 0\r\n        }\r\n        this.handlePageClick = this.handlePageClick.bind(this);\r\n    }\r\n\r\n    handlePageClick = (e) => {\r\n        const selectedPage = e.selected;\r\n        const offset = selectedPage * this.state.perPage;\r\n\r\n        this.setState({\r\n            currentPage: selectedPage,\r\n            offset: offset\r\n        }, () => {\r\n            this.loadMoreData()\r\n        });\r\n\r\n    };\r\n\r\n    loadMoreData() {\r\n\t\tconst data = this.state.orgtableData;\r\n\t\t\r\n\t\tconst slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\r\n\t\tthis.setState({\r\n\t\t\tpageCount: Math.ceil(data.length / this.state.perPage),\r\n\t\t\ttableData:slice\r\n\t\t})\r\n\t\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getData();\r\n    }\r\n\r\n    getData() {\r\n        axios\r\n            .get(`https://jsonplaceholder.typicode.com/comments`)\r\n            .then(res => {\r\n\r\n                var data = res.data;\r\n\t\t\t\t\r\n                var slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\r\n                \r\n\r\n                this.setState({\r\n                    pageCount: Math.ceil(data.length / this.state.perPage),\r\n                    orgtableData :res.data,\r\n                    tableData:slice\r\n                })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                  <h1>Pagination</h1>\r\n\r\n                  <table border=\"1\">\r\n                     <thead>\r\n                     <th>Id</th>\r\n                         <th>Name</th>\r\n                         <th>Email</th>\r\n                         <th>Body</th>\r\n                     </thead>\r\n                     <tbody>\r\n                        {\r\n                          this.state.tableData.map((tdata, i) => (\r\n                                <tr>\r\n                                    <td>{tdata.id}</td>\r\n                                    <td>{tdata.name}</td>\r\n                                    <td>{tdata.email}</td>\r\n                                    <td>{tdata.body}</td>\r\n                                </tr>\r\n                            \r\n                          ))\r\n                        }\r\n\r\n                     </tbody>\r\n                 </table>  \r\n\r\n                 <ReactPaginate\r\n                    previousLabel={\"prev\"}\r\n                    nextLabel={\"next\"}\r\n                    breakLabel={\"...\"}\r\n                    breakClassName={\"break-me\"}\r\n                    pageCount={this.state.pageCount}\r\n                    marginPagesDisplayed={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={this.handlePageClick}\r\n                    containerClassName={\"pagination\"}\r\n                    subContainerClassName={\"pages pagination\"}\r\n                    activeClassName={\"active\"}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FirstComponents","import React, { PureComponent } from 'react'\r\nimport axios from 'axios';\r\nimport ReactPaginate from 'react-paginate';\r\n    \r\n\r\nexport class PaginationExample extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            offset: 0,\r\n            tableData: [],\r\n            orgtableData: [],\r\n            perPage: 10,\r\n            currentPage: 0\r\n        }\r\n\r\n        this.handlePageClick = this.handlePageClick.bind(this);\r\n\r\n    }\r\n\r\n    handlePageClick = (e) => {\r\n        const selectedPage = e.selected;\r\n        const offset = selectedPage * this.state.perPage;\r\n\r\n        this.setState({\r\n            currentPage: selectedPage,\r\n            offset: offset\r\n        }, () => {\r\n            this.loadMoreData()\r\n        });\r\n\r\n    };\r\n\r\n    loadMoreData() {\r\n\t\tconst data = this.state.orgtableData;\r\n\t\t\r\n\t\tconst slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\r\n\t\tthis.setState({\r\n\t\t\tpageCount: Math.ceil(data.length / this.state.perPage),\r\n\t\t\ttableData:slice\r\n\t\t})\r\n\t\r\n    }\r\n\r\n   componentDidMount(){\r\n        this.getData();\r\n    }\r\n    getData() {\r\n        axios\r\n            .get('https://jsonplaceholder.typicode.com/comments')\r\n            .then(res => {\r\n                var tdata = res.data;\r\n                console.log('data-->'+JSON.stringify(tdata))\r\n\t\t\t\t var slice = tdata.slice(this.state.offset, this.state.offset + this.state.perPage)\r\n                this.setState({\r\n                    pageCount: Math.ceil(tdata.length / this.state.perPage),\r\n                    orgtableData : tdata,\r\n                    tableData:slice\r\n                })\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <h1>Gk Techy</h1>\r\n\r\n                 <table border=\"1\">\r\n                     <thead>\r\n                         <th>Id</th>\r\n                         <th>Name</th>\r\n                         <th>Email</th>\r\n                         <th>Body</th>\r\n\r\n                     </thead>\r\n                     <tbody>\r\n                        {\r\n                          this.state.tableData.map((tdata, i) => (\r\n                                <tr>\r\n                                    <td>{tdata.id}</td>\r\n                                    <td>{tdata.name}</td>\r\n                                    <td>{tdata.email}</td>\r\n                                    <td>{tdata.body}</td>\r\n                                </tr>\r\n                            \r\n                          ))\r\n                        }\r\n\r\n                     </tbody>\r\n                 </table>   \r\n\r\n                 <ReactPaginate\r\n                    previousLabel={\"prev\"}\r\n                    nextLabel={\"next\"}\r\n                    breakLabel={\"...\"}\r\n                    breakClassName={\"break-me\"}\r\n                    pageCount={this.state.pageCount}\r\n                    marginPagesDisplayed={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={this.handlePageClick}\r\n                    containerClassName={\"pagination\"}\r\n                    subContainerClassName={\"pages pagination\"}\r\n                    activeClassName={\"active\"}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PaginationExample","import React from 'react';\r\nimport FirstComponents from './FirstComponents'\r\n\r\nimport PaginationExample from './PaginationExample'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <FirstComponents/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}